// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PythonSucks.Data;

namespace PythonSucks.Data.Migrations
{
    [DbContext(typeof(PythonSucksDbContext))]
    partial class PythonSucksDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("PythonSucks.Model.Hater", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ChildTrauma")
                        .IsRequired();

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Surname");

                    b.Property<DateTime?>("UpdateDate")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Hater");

                    b.HasData(
                        new { Id = new Guid("59a7731a-a094-4550-a62e-9782dbc05bd6"), ChildTrauma = "His bike was pink.", CreateDate = new DateTime(2018, 10, 23, 16, 29, 36, 551, DateTimeKind.Utc), Name = "Gonzalo", Surname = "Rubio", UpdateDate = new DateTime(2018, 10, 23, 16, 29, 36, 552, DateTimeKind.Utc) },
                        new { Id = new Guid("20edcdf4-91f2-439c-a825-27548e01e249"), ChildTrauma = "He saw his parents in bed.", CreateDate = new DateTime(2018, 10, 23, 16, 29, 36, 552, DateTimeKind.Utc), Name = "Jorge", Surname = "Jardines", UpdateDate = new DateTime(2018, 10, 23, 16, 29, 36, 552, DateTimeKind.Utc) }
                    );
                });

            modelBuilder.Entity("PythonSucks.Model.Reason", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired();

                    b.Property<string>("Description");

                    b.Property<Guid>("HaterId");

                    b.Property<Guid?>("HaterId1");

                    b.Property<int>("RageLevel");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<DateTime?>("UpdateDate")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("HaterId");

                    b.HasIndex("HaterId1");

                    b.ToTable("Reason");

                    b.HasData(
                        new { Id = new Guid("59a7731a-a094-4550-a62e-9782dbc05bd6"), CreateDate = new DateTime(2018, 10, 23, 16, 29, 36, 579, DateTimeKind.Utc), Description = "Python grammar is not as easy as people say.", HaterId = new Guid("59a7731a-a094-4550-a62e-9782dbc05bd6"), RageLevel = 2, Title = "Grammar", UpdateDate = new DateTime(2018, 10, 23, 16, 29, 36, 579, DateTimeKind.Utc) },
                        new { Id = new Guid("bfb34ae9-5ae8-4926-b138-1865d047c3ec"), CreateDate = new DateTime(2018, 10, 23, 16, 29, 36, 579, DateTimeKind.Utc), Description = "No interfaces! WTF!", HaterId = new Guid("59a7731a-a094-4550-a62e-9782dbc05bd6"), RageLevel = 5, Title = "Interfaces", UpdateDate = new DateTime(2018, 10, 23, 16, 29, 36, 579, DateTimeKind.Utc) }
                    );
                });

            modelBuilder.Entity("PythonSucks.Model.Vote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired();

                    b.Property<Guid>("HaterId");

                    b.Property<Guid>("ReasonId");

                    b.Property<DateTime?>("UpdateDate")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("HaterId");

                    b.HasIndex("ReasonId");

                    b.ToTable("Vote");
                });

            modelBuilder.Entity("PythonSucks.Model.Reason", b =>
                {
                    b.HasOne("PythonSucks.Model.Hater")
                        .WithMany("Reasons")
                        .HasForeignKey("HaterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PythonSucks.Model.Hater", "Hater")
                        .WithMany()
                        .HasForeignKey("HaterId1");
                });

            modelBuilder.Entity("PythonSucks.Model.Vote", b =>
                {
                    b.HasOne("PythonSucks.Model.Hater", "Hater")
                        .WithMany("Votes")
                        .HasForeignKey("HaterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PythonSucks.Model.Reason", "Reason")
                        .WithMany("Votes")
                        .HasForeignKey("ReasonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
